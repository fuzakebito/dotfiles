[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'nvim-lualine/lualine.nvim'

[[plugins]]
repo = 'kyazdani42/nvim-web-devicons'

[[plugins]]
repo = 'lambdalisue/nerdfont.vim'

[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
hook_add = '''
  let g:coc_global_extensions = [
    \'coc-explorer',
    \'coc-vimtex',
    \'coc-grammarly'
  \]
'''

[[plugins]]
repo = 'lambdalisue/fern.vim'
hook_add = '''
  nnoremap <silent> <Leader>e :<C-u>Fern . -drawer -reveal=% -toggle<CR>
  autocmd FileType fern set nonumber
'''

[[plugins]]
repo = 'lambdalisue/fern-git-status.vim'
depends = ['fern.vim']

[[plugins]]
repo = 'lambdalisue/fern-renderer-nerdfont.vim'
depends = ['fern.vim']
hook_add = '''
  let g:fern#renderer = "nerdfont"
  function! Fern_renderer_ornament(choice)
    if a:choice == 1
      let g:fern#renderer#nerdfont#leading = "│ "
      let g:fern#renderer#nerdfont#root_symbol = ""
      let g:fern#renderer#nerdfont#leaf_symbol = ""
      let g:fern#renderer#nerdfont#expanded_symbol = ""
      let g:fern#renderer#nerdfont#collapsed_symbol = ""
    elseif a:choice == 2
      let g:fern#renderer#nerdfont#leading = " "
      let g:fern#renderer#nerdfont#root_symbol = "⏷ "
      let g:fern#renderer#nerdfont#leaf_symbol = "   "
      let g:fern#renderer#nerdfont#expanded_symbol = " ⏷ "
      let g:fern#renderer#nerdfont#collapsed_symbol = " ⏵ "
    elseif a:choice == 3
      let g:fern#renderer#nerdfont#leading = " │"
      let g:fern#renderer#nerdfont#root_symbol = "⏷ "
      let g:fern#renderer#nerdfont#leaf_symbol = "   "
      let g:fern#renderer#nerdfont#expanded_symbol = " ⏷ "
      let g:fern#renderer#nerdfont#collapsed_symbol = " ⏵ "
    endif
  endfunction
  call Fern_renderer_ornament(1)
  function! s:fern_highlight() abort
    highlight! link FernRootSymbol   Comment
    highlight! link FernRootText     Comment
    highlight! link FernLeafSymbol   Grey
    highlight! link FernLeafText     None
    highlight! link FernBranchSymbol Grey
    highlight! link FernBranchText   Directory
    highlight! link FernMarkedLine   None
    highlight! link FernMarkedText   Purple
  endfunction
  augroup fern-highlight
    autocmd!
    autocmd FileType fern call s:fern_highlight()
  augroup END
'''

[[plugins]]
repo = 'lambdalisue/glyph-palette.vim'
hook_add = '''
  augroup my-glyph-palette
    autocmd! *
    autocmd FileType fern call glyph_palette#apply()
  augroup END
'''

[[plugins]]
repo = 'yuki-yano/fern-preview.vim'
depends = ['lambdalisue/fern.vim']
hook_add = '''
  function! s:fern_settings() abort
    nmap <silent> <buffer> p     <Plug>(fern-action-preview:toggle)
    nmap <silent> <buffer> <C-p> <Plug>(fern-action-preview:auto:toggle)
    nmap <silent> <buffer> <C-d> <Plug>(fern-action-preview:scroll:down:half)
    nmap <silent> <buffer> <C-u> <Plug>(fern-action-preview:scroll:up:half)
  endfunction
  augroup fern-settings
    autocmd!
    autocmd FileType fern call s:fern_settings()
  augroup END
'''

[[plugins]]
repo = 'antoinemadec/FixCursorHold.nvim'
hook_add = '''
  let g:cursorhold_updatetime = 100
'''

[[plugins]]
repo = 'github/copilot.vim'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
hook_add = '''
  nnoremap <leader>ff <cmd>lua require('telescope.builtin').find_files()<cr>
  nnoremap <leader>fg <cmd>lua require('telescope.builtin').live_grep()<cr>
  nnoremap <leader>fb <cmd>lua require('telescope.builtin').buffers()<cr>
  nnoremap <leader>fh <cmd>lua require('telescope.builtin').help_tags()<cr>
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
hook_post_update = 'TSUpdate'

[[plugins]]
repo = 'karb94/neoscroll.nvim'

[[plugins]]
repo = 'sainnhe/edge'
hook_add = '''
  let g:edge_diagnostic_text_highlight = 1
  let g:edge_diagnostic_line_highlight = 1
  let g:edge_better_performance = 1
'''

[[plugins]]
repo = 'dylnmc/synstack.vim'
