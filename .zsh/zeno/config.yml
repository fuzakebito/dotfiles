snippets:
  # snippet and keyword abbrev
  - name: git status
    keyword: gs
    snippet: git status --short --branch
  # snippet with placeholder
  - name: git commit message
    keyword: gcim
    snippet: git commit -m '{{commit_message}}'
  - name: "null"
    keyword: "null"
    snippet: ">/dev/null 2>&1"
    # auto expand condition
    # If not defined, it is only valid at the beginning of a line.
    context:
      # buffer: '' 
      lbuffer: '.+\s'
      # rbuffer: ''
  - name: branch
    keyword: B
    snippet: git symbolic-ref --short HEAD
    context:
      lbuffer: '^git\s+checkout\s+'
    evaluate: true # eval snippet
  - name: expand ls to exa
    keyword: ls
    snippet: exa
  - name: git tree view
    keyword: gls
    snippet: exa -Tla --git --git-ignore -I .git
  - name: install package by yay
    keyword: inst
    snippet: yay -S
  - name: remove package by yay
    keyword: unst
    snippet: yay -Rns
  - name: remove package no longer needed
    keyword: autoremove
    snippet: sudo sh -c 'pacman -Qdtq | pacman -Rs -'
  - name: expand :q to exit
    keyword: :q
    snippet: exit

completions:
  - name: kill
    patterns: 
      - "^kill( -9)? $"
    sourceCommand: "ps -ef | sed 1d"
    options:
      --multi: true
      --prompt: "'Kill Process> '"
    callback: "awk '{print $2}'"
  - name: install package by pacman
    patterns:
      - "^pacman -S $"
    sourceCommand: "pacman -Sl"
    options:
      --multi: true
      --prompt: "'Package to install> '"
      --preview: "read _ i _ <<< {}; pacman -Sii \\$i"
    callback: "awk '{print $2}'"
  - name: install package by yay
    patterns:
      - "^yay -S $"
    sourceCommand: "yay -Sl"
    options:
      --multi: true
      --prompt: "'Package to install> '"
      --preview: "read _ i _ <<< {}; yay -Sii \\$i"
    callback: "awk '{print $2}'"
  - name: remove package
    patterns:
      - "^yay -Rns $"
    sourceCommand: "pacman -Qe"
    options:
      --multi: true
      --prompt: "'Package to remove> '"
      --preview: "read i _ <<< {}; yay -Sii \\$i"
    callback: "awk '{print $1}'"
